version: 2.1

orbs:
  app: dialogue/helm-app@2
  base: dialogue/base@1
  job: dialogue/helm-job@2
  python: dialogue/python@2
  release: dialogue/release@2

executors:
  large-python-executor:
    docker:
      - image: circleci/python:3.7
    resource_class: large

workflows:
  cicd:
    jobs:
      - mypy:
          name: (AS) mypy
          working_directory: action-server
          context: org-global-v2
      - python/pylama:
          name: (AS) pylama
          working_directory: action-server
          context: org-global-v2
      - python/isort:
          name: (AS) isort
          working_directory: action-server
          context: org-global-v2
      - python/black:
          name: (AS) black
          working_directory: action-server
          context: org-global-v2
      - python/test:
          name: (AS) test
          working_directory: action-server
          codecov_flag: action_server
          context: org-global-v2
      - app/build:
          name: (AS) build
          component: action-server
          context: org-global-v2

      - mypy:
          name: (core) mypy
          working_directory: core
          context: org-global-v2
      - python/pylama:
          name: (core) pylama
          working_directory: core
          context: org-global-v2
      - python/isort:
          name: (core) isort
          working_directory: core
          context: org-global-v2
      - python/black:
          name: (core) black
          working_directory: core
          context: org-global-v2
      - validate_domain:
          name: (core) validate_domain
          working_directory: core
          context: org-global-v2

      - prepare_core_build:
          name: (core-en) Prepare build
          context: org-global-v2
          language: en
      - app/build:
          name: (core-en) build
          component: core-en
          context: org-global-v2
          before_build_steps:
            - attach_workspace:
                at: ~/project/
          requires:
            - (core-en) Prepare build

      - prepare_core_build:
          name: (core-fr) Prepare build
          context: org-global-v2
          language: fr
      - app/build:
          name: (core-fr) build
          component: core-fr
          context: org-global-v2
          before_build_steps:
            - attach_workspace:
                at: ~/project/
          requires:
            - (core-fr) Prepare build

      - release/release:
          name: release
          context: org-global-v2
          requires:
            - (AS) mypy
            - (AS) pylama
            - (AS) isort
            - (AS) black
            - (AS) test
            - (AS) build
            - (core) mypy
            - (core) pylama
            - (core) isort
            - (core) black
            - (core) validate_domain
            - (core-en) build
            - (core-fr) build

      # dev deployments
      - app/deploy:
          name: deploy-dev-ca2-ephemeral
          stage: dev
          place: ca2
          ephemeral: yes
          requires:
            - (AS) mypy
            - (AS) pylama
            - (AS) isort
            - (AS) black
            - (AS) test
            - (AS) build
            - (core) mypy
            - (core) pylama
            - (core) isort
            - (core) black
            - (core) validate_domain
            - (core-en) build
            - (core-fr) build
          context: org-global-v2
          filters:
            branches:
              ignore: master
      - job/deploy:
          name: deploy-job-dev-ca2-ephemeral
          stage: dev
          place: ca2
          wait: false
          requires:
            - deploy-dev-ca2-ephemeral
          context: org-global-v2
          filters:
            branches:
              ignore: master
      - app/clean_ephemeral_deploy:
          name: clean-dev-ca2-ephemeral-deploy
          stage: dev
          place: ca2
          filters:
            branches:
              only: master
          context: org-global-v2

      - app/test_system:
          name: dev-integration-tests-en
          stage: dev
          place: ca2
          component: core-en
          working_directory: core
          requires:
            - deploy-dev-ca2-ephemeral
          context: org-global-v2
          filters:
            branches:
              ignore: master
          steps:
            - run-integration-tests:
                language: en
      - app/test_system:
          name: dev-integration-tests-fr
          stage: dev
          place: ca2
          component: core-fr
          working_directory: core
          requires:
            - deploy-dev-ca2-ephemeral
          context: org-global-v2
          filters:
            branches:
              ignore: master
          steps:
            - run-integration-tests:
                language: fr

      # master deployments
      - app/deploy:
          name: deploy-dev-ca2
          stage: dev
          place: ca2
          requires:
            - (AS) mypy
            - (AS) pylama
            - (AS) isort
            - (AS) black
            - (AS) test
            - (AS) build
            - (core) mypy
            - (core) pylama
            - (core) isort
            - (core) black
            - (core) validate_domain
            - (core-en) build
            - (core-fr) build
          context: org-global-v2
          filters:
            branches:
              only: master
      - job/deploy:
          name: deploy-job-dev-ca2
          stage: dev
          place: ca2
          wait: false
          requires:
            - deploy-dev-ca2
          context: org-global-v2
          filters:
            branches:
              only: master

      - app/test_system:
          name: master-integration-tests-en
          stage: dev
          place: ca2
          component: core-en
          working_directory: core
          requires:
            - deploy-dev-ca2
          context: org-global-v2
          filters:
            branches:
              only: master
          steps:
            - run-integration-tests:
                language: en
      - app/test_system:
          name: master-integration-tests-fr
          stage: dev
          place: ca2
          component: core-fr
          working_directory: core
          requires:
            - deploy-dev-ca2
          context: org-global-v2
          filters:
            branches:
              only: master
          steps:
            - run-integration-tests:
                language: fr

      - app/deploy:
          name: deploy-prod-ca
          stage: prod
          place: ca
          requires:
            - master-integration-tests-en
            - master-integration-tests-fr
          context: org-global-v2
          filters:
            branches:
              only: master
          deploy_timeout: 600s
          cci_wait_timeout: 615s
      - job/deploy:
          name: deploy-job-prod-ca
          stage: prod
          place: ca
          wait: false
          requires:
            - deploy-prod-ca
          context: org-global-v2
          filters:
            branches:
              only: master

aliases:
  - &param__language
    language:
      type: string
      description: Specifies which model language to build/use
  - &param__working_directory
    working_directory:
      type: string
      default: "."
      description: Directory to run post-checkout steps

jobs:
  mypy:
    description: Checks static typing with mypy
    parameters:
      <<: *param__working_directory
    working_directory: ~/project/<<parameters.working_directory>>
    executor: python/python
    steps:
      - setup-project
      - run:
          name: Run mypy
          command: poetry run mypy .
  validate_domain:
    description: Validate Rasa domain file
    parameters:
      <<: *param__working_directory
    working_directory: ~/project/<<parameters.working_directory>>
    executor: python/python
    steps:
      - setup-project
      - run:
          name: Run validate_domain
          command: poetry run python scripts/validate_domain.py
  prepare_core_build:
    description: Prepare core help-app component (rasa-core models and docker assets)
    parameters:
      <<: *param__language
    executor: large-python-executor
    environment:
      COMPONENT_PATH: /app/core-<<parameters.language>>
    working_directory: /app/core
    docker:
      - image: rasa/rasa:2.0.0a1-full
        entrypoint: ["/bin/bash"]
    steps:
      - checkout:
          path: /app
      - run:
          name: Prepare NLU training files
          command: |
            mkdir ${COMPONENT_PATH}
            cp poetry.lock ${COMPONENT_PATH}
            cp pyproject.toml ${COMPONENT_PATH}
            cp Dockerfile ${COMPONENT_PATH}
            cp credentials.yml ${COMPONENT_PATH}
            cp endpoints.yml ${COMPONENT_PATH}
            cp -r core ${COMPONENT_PATH}
      - run:
          name: Train the NLU model
          command: |
            sh scripts/prepare-training-data.sh <<parameters.language>>
            rasa train --augmentation 0 --out ${COMPONENT_PATH}/models
      - persist_to_workspace:
          root: /app
          paths:
            - core-<<parameters.language>>
commands:
  setup-project:
    steps:
      - base/setup
      - python/setup
      - python/install_deps
  run-integration-tests:
    parameters:
      <<: *param__language
    steps:
      - python/setup
      - python/install_deps
      - run:
          name: Run integration tests
          command: |
            echo 'export CORE_ENDPOINT_URL=${APP_SCHEME}://${APP_HOST}:${APP_PORT}' >> $BASH_ENV
            source $BASH_ENV
            poetry run python -m rasa_integration_testing ../integration-tests-<<parameters.language>>
          environment:
            INTEGRATION_TESTS_REMINDER_ID_PROFILE_1: NLBAvWPZ
            INTEGRATION_TESTS_REMINDER_ID_PROFILE_2: qVQGKQKm
